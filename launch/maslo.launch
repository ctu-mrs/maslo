<launch>

    <!-- ENV VARS -->
    <arg name="UAV_NAME" default="$(env UAV_NAME)"/>
    <arg name="UAV_TYPE" default="$(env UAV_TYPE)" />
    <arg name="RUN_TYPE" default="$(env RUN_TYPE)" />

    <arg name="node_prefix" default=""/>

    <arg if="$(eval arg('RUN_TYPE') == 'simulation')" name="is_simulation" value="true" />
    <arg if="$(eval arg('RUN_TYPE') == 'realworld')" name="is_simulation" value="false" />
    <arg if="$(eval arg('RUN_TYPE') == 'simulation')" name="config_file" value="$(find maslo)/config/simulation.yaml" />
    <arg if="$(eval arg('RUN_TYPE') == 'realworld')" name="config_file" value="$(find maslo)/config/realworld.yaml" />

    <arg name="frame_baselink" default="$(arg UAV_NAME)/base_link" />
    <arg name="frame_lidar" default="$(arg UAV_NAME)/os_sensor" />
    <arg name="frame_odom" default="$(arg UAV_NAME)/$(arg node_prefix)slam_origin" />
    <arg name="frame_map" default="$(arg UAV_NAME)/$(arg node_prefix)slam_mapping_origin" />

    <arg name="launch_delay" default="0"/>
    <arg name="launch_prefix" default="" />
    <arg name="nodelet" default="standalone"/>
    <arg name="nodelet_manager" default=""/>

    <!-- TODO move to HW API -->
    <arg name="motor_slowdown_constant" default="0.0159236" />
    <arg name="num_motors" default="4" />

    <group ns="$(arg UAV_NAME)">

<!-- TODO move to HW API -->
<!--//{ motor_speed_sync nodelet -->
      <node pkg="nodelet" type="nodelet" name="$(arg node_prefix)mas_topic_sync" args="$(arg nodelet) mas_topic_sync/MasTopicSync $(arg nodelet_manager)" output="screen" launch-prefix="bash -c 'sleep $(arg launch_delay); $0 $@'; $(arg launch_prefix)">

        <!-- parameters -->
        <param name="uav_name" type="string" value="$(arg UAV_NAME)" />
        <param name="is_simulation" type="bool" value="$(arg is_simulation)" />
        <param name="motor_slowdown_constant" type="double" value="$(arg motor_slowdown_constant)" />
        <param name="num_motors" type="int" value="$(arg num_motors)" />

        <!-- subscribers -->
        <remap from="~esc_status_in" to="mavros/esc_status" />

        <!-- publishers -->
        <remap from="~motor_speeds_sync_out" to="$(arg node_prefix)mas_topic_sync/motor_speeds" />


      </node>
<!--//}-->

<!--//{ motor speed preintegration nodelet -->
      <node pkg="nodelet" type="nodelet" name="$(arg node_prefix)mas_preintegration" args="$(arg nodelet) maslo/MotorSpeedPreintegration $(arg nodelet_manager)" output="screen" launch-prefix="bash -c 'sleep $(arg launch_delay); $0 $@'; $(arg launch_prefix)">

        <!-- config file --> 
        <rosparam file="$(arg config_file)" command="load" />

        <!-- parameters -->
        <param name="uavName" type="string" value="$(arg UAV_NAME)" />
        <param name="lidarFrame" type="string" value="$(arg frame_lidar)" />
        <param name="baselinkFrame" type="string" value="$(arg frame_baselink)" />
        <param name="odometryFrame" type="string" value="$(arg frame_odom)" />

        <!-- subscribers -->
        <remap from="~maslo/preintegration/motor_speeds_in" to="$(arg node_prefix)mas_topic_sync/motor_speeds" />
        <remap from="~maslo/preintegration/odom_mapping_incremental_in" to="$(arg node_prefix)maslo/mapping/odometry_incremental" />
        <remap from="~maslo/preintegration/odom_mapping_in" to="$(arg node_prefix)maslo/mapping/odometry" />

        <!-- publishers -->
        <remap from="~maslo/preintegration/odom_preintegrated_out" to="$(arg node_prefix)maslo/preintegration/odometry" />


      </node>
<!--//}-->

<!--//{ transform fusion nodelet -->
       <node pkg="nodelet" type="nodelet" name="$(arg node_prefix)transform_fusion" args="$(arg nodelet) maslo/TransformFusion $(arg nodelet_manager)" output="screen" launch-prefix="bash -c 'sleep $(arg launch_delay); $0 $@'; $(arg launch_prefix)"> 

        <!-- config file --> 
        <rosparam file="$(arg config_file)" command="load" />

        <!-- parameters -->
        <param name="uavName" type="string" value="$(arg UAV_NAME)" /> 
        <param name="lidarFrame" type="string" value="$(arg frame_lidar)" />
        <param name="baselinkFrame" type="string" value="$(arg frame_baselink)" />
        <param name="odometryFrame" type="string" value="$(arg frame_odom)" />
        <param name="mapFrame" type="string" value="$(arg frame_map)" />

        <!-- publishers --> 
        <remap from="~fused_odometry_out" to="$(arg node_prefix)maslo/fusion/odometry" /> 
        <remap from="~fused_path_out" to="$(arg node_prefix)maslo/fusion/path" /> 

        <!-- subscribers --> 
        <remap from="~odom_pre_incremental_in" to="$(arg node_prefix)maslo/preintegration/odometry" /> 
        <remap from="~odom_mapping_in" to="$(arg node_prefix)maslo/mapping/odometry" /> 

       </node> 
<!-- //} -->

<!--//{ image_projection nodelet -->
      <node pkg="nodelet" type="nodelet" name="$(arg node_prefix)image_projection" args="$(arg nodelet) maslo/ImageProjection $(arg nodelet_manager)" output="screen" launch-prefix="bash -c 'sleep $(arg launch_delay); $0 $@'; $(arg launch_prefix)">

        <!-- config file --> 
        <rosparam file="$(arg config_file)" command="load" />

        <!-- parameters -->
        <param name="uavName" type="string" value="$(arg UAV_NAME)" />
        <param name="lidarFrame" type="string" value="$(arg frame_lidar)" />
        <param name="baselinkFrame" type="string" value="$(arg frame_baselink)" />

        <!-- subscribers -->
        <remap from="~odom_incremental_in" to="maslo/odometry/preintegrated" />
        <remap from="~cloud_in" to="os_cloud_nodelet/points_processed" />

        <!-- publishers -->
        <remap from="~maslo/deskew/deskewed_cloud_out" to="$(arg node_prefix)maslo/deskew/deskewed_cloud" />
        <remap from="~maslo/deskew/deskewed_cloud_info_out" to="$(arg node_prefix)maslo/deskew/deskewed_cloud_info" />

      </node>
<!--//}-->

<!--//{ feature extraction nodelet -->
      <node pkg="nodelet" type="nodelet" name="$(arg node_prefix)feature_extraction" args="$(arg nodelet) maslo/FeatureExtraction $(arg nodelet_manager)" output="screen" launch-prefix="bash -c 'sleep $(arg launch_delay); $0 $@'; $(arg launch_prefix)">

        <!-- config file --> 
        <rosparam file="$(arg config_file)" command="load" />

        <!-- parameters -->
        <param name="uavName" type="string" value="$(arg UAV_NAME)" />
        <param name="lidarFrame" type="string" value="$(arg frame_lidar)" />

        <!-- subscribers -->
        <remap from="~maslo/feature/deskewed_cloud_info_in" to="$(arg node_prefix)maslo/deskew/deskewed_cloud_info" />

        <!-- publishers -->
        <remap from="~maslo/feature/cloud_info_out" to="$(arg node_prefix)maslo/feature/cloud_info" />
        <remap from="~maslo/feature/cloud_corner_out" to="$(arg node_prefix)maslo/feature/cloud_corner" />
        <remap from="~maslo/feature/cloud_surface_out" to="$(arg node_prefix)maslo/feature/cloud_surface" />

      </node>
<!--//}-->

<!--//{ map_optimization nodelet -->
      <node pkg="nodelet" type="nodelet" name="$(arg node_prefix)map_optimization" args="$(arg nodelet) maslo/MapOptimization $(arg nodelet_manager)" output="screen" launch-prefix="bash -c 'sleep $(arg launch_delay); $0 $@'; $(arg launch_prefix)">

        <!-- config file --> 
        <rosparam file="$(arg config_file)" command="load" />

        <!-- parameters -->
        <param name="uavName" type="string" value="$(arg UAV_NAME)" />
        <param name="lidarFrame" type="string" value="$(arg frame_lidar)" />
        <param name="baselinkFrame" type="string" value="$(arg frame_baselink)" />
        <param name="odometryFrame" type="string" value="$(arg frame_odom)" />

        <!-- subscribers -->
        <remap from="~maslo/mapping/cloud_info_in" to="$(arg node_prefix)maslo/feature/cloud_info" />
        <remap from="~maslo/loop_closure_detection_in" to="$(arg node_prefix)maslo/loop_closure_detection" />
        <remap from="~maslo/mapping/orientation_in" to="hw_api/orientation" />

        <!-- publishers -->
        <remap from="~maslo/mapping/trajectory_out" to="$(arg node_prefix)maslo/mapping/trajectory" />
        <remap from="~maslo/mapping/map_global_out" to="$(arg node_prefix)maslo/mapping/map_global" />
        <remap from="~maslo/mapping/odometry_out" to="$(arg node_prefix)maslo/mapping/odometry" />
        <remap from="~maslo/mapping/odometry_incremental_out" to="$(arg node_prefix)maslo/mapping/odometry_incremental" />
        <remap from="~maslo/mapping/path_out" to="$(arg node_prefix)maslo/mapping/path" />
        <remap from="~maslo/mapping/icp_loop_closure_history_cloud_out" to="$(arg node_prefix)maslo/mapping/icp_loop_closure_history_cloud" />
        <remap from="~maslo/mapping/icp_loop_closure_corrected_cloud_out" to="$(arg node_prefix)maslo/mapping/icp_loop_closure_corrected_cloud" />
        <remap from="~maslo/mapping/loop_closure_constraints_out" to="$(arg node_prefix)maslo/mapping/loop_closure_constraints" />
        <remap from="~maslo/mapping/map_local_out" to="$(arg node_prefix)maslo/mapping/map_local" />
        <remap from="~maslo/mapping/cloud_registered_out" to="$(arg node_prefix)maslo/mapping/cloud_registered" />
        <remap from="~maslo/mapping/cloud_registered_raw_out" to="$(arg node_prefix)lioam/cloud_registered_raw" />

      </node>
<!--//}-->

    </group>


</launch>
